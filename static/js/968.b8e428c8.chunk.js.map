{"version":3,"file":"static/js/968.b8e428c8.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/profile/Profile.module.css?5246","webpack://social-network/./src/components/profile/profileInfo/ProfileInfo.module.css?df08","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/profile/myPosts/MyPosts.module.css?000b","webpack://social-network/./src/components/profile/myPosts/post/Post.module.css?fa80","components/profile/myPosts/post/Post.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__Vbhrb\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__XhfeK\",\"ProfileStatusBtn\":\"ProfileInfo_ProfileStatusBtn__WAajg\",\"info\":\"ProfileInfo_info__Y5sGf\"};","import React, { useEffect, useState } from 'react';\r\nimport S from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span className={S.ProfileStatusBtn} onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <form>\r\n                    <input onChange={onStatusChange}\r\n                    onBlur={deactivateEditMode}\r\n                        autoFocus={true}\r\n                        value={status} />\r\n                </form>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport S from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\n//import ProfileStatus from './ProfileStatus';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={S.profileInfo}>\r\n            <img src={profile.photos.large} alt={profile.fullName}></img>\r\n            <div className={S.profileWrapper}>\r\n                <div className={S.info}>\r\n                    <h2>{profile.fullName}</h2>\r\n                    <NavLink to={profile.contacts.github}>{profile.contacts.github}</NavLink>\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__p8uL5\",\"form\":\"MyPosts_form__7JVQL\",\"btn\":\"MyPosts_btn__s3auT\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__1U9Th\"};","import React from 'react';\r\nimport S from './Post.module.css';\r\nimport myPhoto from '../../../../assets/images/my-photo.avif';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={S.item}>\r\n            <img src={myPhoto} alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>\r\n                {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport S from './MyPosts.module.css';\r\nimport Post from './post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/formsControls/FormControls';\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props || nextState !== this.state;\r\n    // }\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostElement)\r\n    };\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} key={p.id} id={p.id} />);\r\n    return (\r\n        <div className={S.myPosts}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n            <div className={S.posts}>{postsElements}</div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form className={S.form} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"newPostElement\"\r\n                validate={[required, maxLengthCreator10]} />\r\n            <button className={S.btn}>Add post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostElement) => { \r\n            dispatch(addPostActionCreator(newPostElement)) }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport S from  './Profile.module.css';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport MyPostsContainer from './myPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={S.profile}>\r\n            <ProfileInfo profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer';\r\nimport withRouter from './withRouter';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthNavigate)\r\n    (ProfileContainer);\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForNavigate = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    class NavigateComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to = {\"/login\"}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent);\r\n\r\n    return ConnectedAuthNavigateComponent;\r\n};\r\n\r\n\r\n\r\n\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","className","S","ProfileStatusBtn","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","onBlur","deactivateEditMode","updateStatus","autoFocus","_ref","profile","profileInfo","src","photos","large","alt","fullName","profileWrapper","info","NavLink","to","contacts","github","ProfileStatusWithHooks","Preloader","myPhoto","message","likeCount","maxLengthCreator10","maxLengthCreator","MyPosts","React","postsElements","posts","map","p","Post","id","myPosts","AddNewPostReduxForm","onSubmit","values","addPost","newPostElement","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","btn","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","render","Profile","compose","auth","isAuth","withRouter","withAuthNavigate","mapStateToPropsForNavigate","Component","NavigateComponent","Navigate"],"sourceRoot":""}